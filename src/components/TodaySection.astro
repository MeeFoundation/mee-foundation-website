---
import Background from './Background.astro';
import FloatingFigures from './FloatingFigures.astro';
import Grid from './Grid.astro';
import Logo from './Logo.astro';

export interface Props {
}

const {  } = Astro.props;
const subtitles = [
	"there is an online power imbalance.",
	"you can’t control who has your data or how they’ll use it",
	"data brokers and marketers are buying and selling information about you without your knowledge",
	"businesses treat your data as their property",
	"many users navigate this world with mistrust and fear"]
---

<article id="today" class="flex today flex-col items-center">
	{/* <img id="linesImage" class="lines animate-fadeIn" src="/images/lines.svg" /> */}
  <section class="relative z-100 flex flex-col items-center text-center w-full md:w-[692px]">
		<Background />
    <div id="title" class="title overflow-hidden fixed z-100 flex items-center justify-center h-screen pb-7">
			<div class="overflow-hidden">
				<h2 class="text text-base leading-5 font-bold tracking-wider uppercase text-purple animate-riseIn animation-delay-800">In today’s digital world...</h2>
			</div>
    </div>
		{subtitles.map(subtitle => (
			<div class="section flex flex-col items-center section-0 overflow-hidden h-[100vh]">
				<div class="overflow-hidden fixed z-100 top-[50vh] w-full px-5 md:w-[692px]">
					<h2 class="text subtitle text-xl md:text-3xl font-bold animate-riseIn text-white/[.85] animation-delay-1800 hidden">{subtitle}</h2>
				</div>
			</div>
		))}
		<div class="fixed flex items-center justify-center h-screen pt-52 z-20 animate-fadeIn-long animation-delay-1800">
			<i class="scrollIcon block w-4 h-6 md:w-6 md:h-10 py-1 md:py-2 transition-opacity ease-linear duration-100 overflow-hidden"/>
		</div>

		<!-- Test riseIn -->
		<!-- {subtitles.map(subtitle => (
			<div class="section flex flex-col items-center section-0 overflow-hidden h-[100vh]">
				<div class="subtitle overflow-hidden fixed z-100 top-[20vh] w-full px-5 md:w-[660px] hidden opacity-0">
					<h2 class="text text-xl md:text-3xl font-bold animate-riseIn-short linear text-white/[.85]">{subtitle} 400ms linear</h2>
				</div>
				<div class="subtitle overflow-hidden fixed z-100 top-[30vh] w-full px-5 md:w-[660px] hidden opacity-0">
					<h2 class="text text-xl md:text-3xl font-bold animate-riseIn-short easeInOut text-white/[.85]">{subtitle} 400ms easeInOut</h2>
				</div>
				<div class="subtitle overflow-hidden fixed z-100 top-[40vh] w-full px-5 md:w-[660px] hidden opacity-0">
					<h2 class="text text-xl md:text-3xl font-bold animate-riseIn-short easeOut text-white/[.85]">{subtitle} 400ms easeOut</h2>
				</div>
				<div class="subtitle overflow-hidden fixed z-100 top-[50vh] w-full px-5 md:w-[660px] hidden opacity-0">
					<h2 class="text text-xl md:text-3xl font-bold animate-riseIn-short linear text-white/[.85]">{subtitle} 800ms linear</h2>
				</div>
				<div class="subtitle overflow-hidden fixed z-100 top-[60vh] w-full px-5 md:w-[660px] hidden opacity-0">
					<h2 class="text text-xl md:text-3xl font-bold animate-riseIn-short easeInOut text-white/[.85]">{subtitle} 800ms easeInOut</h2>
				</div>
				<div class="subtitle overflow-hidden fixed z-100 top-[70vh] w-full px-5 md:w-[660px] hidden opacity-0">
					<h2 class="text text-xl md:text-3xl font-bold animate-riseIn-short easeOut text-white/[.85]">{subtitle} 800ms easeOut</h2>
				</div>
			</div>
		))} -->
		
		<!-- End test riseIn -->

		<div id="animationTrigger" class="section flex flex-col items-center section-0 overflow-hidden h-[100vh]"/>
  </section>
	<!-- <section id="restoringBalance" class="transition-opacity duration-200 hidden fixed section overflow-hidden items-center justify-center w-screen h-screen z-999">
		<div class="h-screen flex flex-col items-center justify-center gap-4 md:gap-5"> 
			<div class="logo logo--contrast w-[138px] h-10 md:w-[165px] md:h-12 animate-fadeIn">
				<Logo />
			</div>
			<div class="overflow-hidden h-16">
				<p id="restoringBalanceText" class="text hidden text-xl leading-normal md:text-[1.75rem] text-blue animate-riseIn">is restoring balance</p>
			</div>
		</div>
	</section> -->
</article>

<style>
	.text {
		-webkit-font-smoothing: antialiased;
		font-smoothing: antialiased;  
	}
	.logo {
		animation-duration: 800ms;
		opacity: 0;
	}

  .lines {
		width: 100vw;
		height: 100vh;
		position: fixed;
		object-fit: cover;
	}
	.title {
		animation-duration: 300ms;
	}
	.subtitle {
		transition: opacity 300ms;
	}

	.scrollIcon {
		display: flex;
		position: relative;
    border: 2px solid white;
    border-radius: 12px;
	}
  .scrollIcon::after {
    position: relative;
    left:calc(50% - 1px);
    width: 2px;
    height: 45%;
    background: rgba(255,255,255,1);
    border-radius: 1px;
    content:"";
		align-self: flex-start;
    animation-name: scroll;
    animation-duration: 2s;
    animation-iteration-count: infinite;
    animation-delay: 2s;
  }

	@keyframes scroll {
		0% { opacity: 1; height: 45%;}
		20% { opacity: 1; height: 45%;}
		30% { height: 100%; align-self: flex-start;}
		40% { opacity: 1; align-self: flex-end;}
		80% {  opacity: 0; height: 0%; align-self: flex-end;}
		81% {  opacity: 0; height: 45%; align-self: flex-start;}
		100% { opacity: 1; height: 45%;}
	}

	@keyframes bleach {
		0% {opacity: 0;}
		30% {opacity: 1}
		52% {height: 20px; filter: blur(5px);}
		87% {height: 20px; filter: blur(5px);}
		98% {height: 100%; border-radius: 50%; filter: blur(90px);}
		100% {height: 300%;border-radius: 0; filter: blur(0);}
	}

</style>

<script>
  const sections = document.querySelectorAll('.today .section');
	const scrollIcon = document.querySelector(".scrollIcon");
	const shadow = document.querySelector(".shadow");
	const background = document.querySelector(".background");
	const title = document.getElementById("title");
	const floatingFigures = document.querySelector('.floatingFigures');
	const grid = document.querySelector('.grid');
	const gradients = document.querySelectorAll('.floatGradient');
	const mainLogo = document.getElementById("mainLogo");
	const todaySection = document.getElementById("today");
	const envisionSection = document.getElementById("envision");
	const restoringBalance = document.getElementById("restoringBalance");
	const restoringBalanceText = document.getElementById("restoringBalanceText");


		const options: IntersectionObserverInit = {
			// root: document.body,
			threshold: 0.1,
			rootMargin: "-99% 0% 0%"
		};
		const observer = new IntersectionObserver((entries, _) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					if(entry.target.id === "animationTrigger") {
						title?.classList.add("animate-fadeOut");
						floatingFigures?.classList.add("animate-collapse");
						shadow?.classList.add("bg-1");
						grid?.classList.add("animate-fadeOut");
						gradients.forEach(gradient => gradient.classList.add("animate-fadeOut"))
						setTimeout(() => {
							mainLogo?.classList.add("logo--contrast");
							todaySection?.classList.toggle("hidden");
							window.scrollTo(0, 0);
							envisionSection?.classList.toggle("hidden");
						},2900);
						// setTimeout(() => {
							// restoringBalance?.classList.toggle("hidden");
						// },3900);
						// setTimeout(() => {
						// 	restoringBalanceText?.classList.toggle("hidden");
						// },4700);
						// setTimeout(() => {
						// 	restoringBalance?.classList.toggle("opacity-0");
						// 	setTimeout(() => {
						// 		todaySection?.classList.toggle("hidden");
						// 	},200)
						// 	envisionSection?.classList.add("flex");
						// 	window.scrollTo(0, 0);
						// 	envisionSection?.classList.remove("hidden");
						// },6900);
					}
					entry.target.querySelectorAll(".subtitle").forEach(subtitle => {subtitle.classList.remove('animate-fadeOut','hidden')});
					entry.target.querySelectorAll(".subtitle").forEach(subtitle => {subtitle.classList.add('animate-riseIn')});
				} else {
					entry.target.querySelectorAll(".subtitle").forEach(subtitle => {subtitle.classList.remove('animate-riseIn','animation-delay-1800')});
					entry.target.querySelectorAll(".subtitle").forEach(subtitle => {subtitle.classList.add('animate-fadeOut')});
				}
			})
		}, options);


		sections.forEach((section) => {
			observer.observe(section)
		});

		document.addEventListener('scroll', () => {
			storeScroll();
			if(window.scrollY > 400) {
				scrollIcon?.classList.add("opacity-0");
				setTimeout(()=>{
					scrollIcon?.classList.add("hidden");
				},400)
			}
		}, {passive: true})

	const storeScroll = () => {
		document.documentElement.style.setProperty('--scroll',
		(window.scrollY /
		(document.body.offsetHeight - window.innerHeight)).toString())
	}
</script>
