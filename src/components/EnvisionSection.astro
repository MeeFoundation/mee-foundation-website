---
import Footer from './Footer.astro';
import done from '@assets/done.svg';

export interface Props {}

const {} = Astro.props;
const subtitles = [
  'Mee is a free personal data service that holds and manages your personal information.',
  'It offers a simple, privacy-respecting experience - lets you see and control who has access to your information.',
  'It puts you in control of what businesses can do with your personal data.',
  'Itâ€™s provided by a non-profit that works on behalf of all Mee users.',
];
const apps = [
  'Never share your information with other companies.',
  'Log you in automatically without having to remember and type in passwords.',
  'Present forms that fill in automatically by pulling information from Mee.',
  'Support surveillance-free, tracking-free private advertising business model.',
];
---

<article
  id="envision"
  class="envision relative -mt-[0vh] flex w-screen flex-col items-center justify-center overflow-x-hidden"
>
  <section
    id="en-section-0"
    class="top-0 z-100 mb-10 mt-32 flex w-screen items-center justify-center md:mt-48"
  >
    <div
      class="flex flex-col items-center justify-center px-6 transition-opacity duration-500 md:p-0"
    >
      <div
        id="title"
        class="section title w-full animate-riseIn overflow-hidden md:w-160"
      >
        <h2
          class="title text marker text-center text-3xl font-bold lg:text-7xl"
        >
          Introducing Mee experience:
        </h2>
      </div>
    </div>
  </section>
  <section
    class="relative z-100 flex w-screen flex-col items-center justify-center"
  >
    <div class="fixed top-0 h-screen w-screen">
      <div class="overflow-hidden"></div>
    </div>
    <div class="bg-1"></div>
    <div class="flex flex-col items-center justify-center gap-16">
      <div class="flex flex-col">
        {
          subtitles.map((subtitle, index) => (
            <div
              id={`en-section-${index + 1}`}
              class="section z-100 mb-2 flex w-full flex-col overflow-hidden px-6 md:mb-4 md:w-160 md:p-0 "
            >
              <div class="subtitle flex w-full animate-fadeOut-short items-center rounded-lg bg-orange-lighter px-2 pb-4 pt-2 opacity-0 animation-delay-300">
                <div class="mr-4">
                  <div class="relative m-2 h-6 w-6 rounded border-[1.5px] border-white md:h-8 md:w-8">
                    <img
                      src={done.src}
                      alt=""
                      class="absolute bottom-[7px] left-[5px] md:bottom-[10px] md:left-[7px]"
                    />
                  </div>
                </div>

                <h2 class="text ms:text-xl mt-2 pr-2 text-base text-black">
                  <span>{subtitle}</span>
                </h2>
              </div>
            </div>
          ))
        }
      </div>
      <div class="title z-100 w-full overflow-hidden px-6 md:w-160 md:p-0">
        <div class="section overflow-hidden">
          <h2
            class="title text marker animate-fadeOut text-center text-3xl font-bold lg:text-7xl"
          >
            Mee-compatible apps:
          </h2>
        </div>
      </div>
      <div class="mb-10 flex flex-col">
        {
          apps.map((app, index) => (
            <div
              id={`en-section-1${index + 1}`}
              class="section z-100 mb-2 flex w-full flex-col overflow-hidden px-6 md:mb-4 md:w-160 md:p-0 "
            >
              <div class="subtitle flex w-full animate-fadeOut-short items-center rounded-lg bg-orange-lighter px-2 pb-4 pt-2 opacity-0 animation-delay-300">
                <div class="mr-4">
                  <div class="relative m-2 h-6 w-6 rounded border-[1.5px] border-white md:h-8 md:w-8">
                    <img
                      src={done.src}
                      alt=""
                      class="absolute bottom-[7px] left-[5px] md:bottom-[10px] md:left-[7px]"
                    />
                  </div>
                </div>

                <h2 class="text ms:text-xl mt-2 pr-2 text-base text-black">
                  <span>{app}</span>
                </h2>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>
  <Footer mode="dark" withAppButtons={false} />
</article>

<style>
  .envision {
    background: #fff;
  }

  .bg-1 {
    position: absolute;
    height: 100%;
    transform: translate(-10vw, 0);
    z-index: 70;
    transform: translateY(150px);
    background: linear-gradient(
      to top,
      rgba(249, 200, 137, 0.4) 75%,
      rgba(249, 182, 137, 0.4) 100%
    );
    filter: blur(100px);
    border-top-left-radius: 50%;
    border-top-right-radius: 50%;
    width: 250vw;
  }

  .bg-2 {
    width: 200vw;
    border-top-left-radius: 50%;
    border-top-right-radius: 50%;
    background: #fff;
    z-index: 100;
  }
  .text {
    -webkit-font-smoothing: antialiased;
    font-smoothing: antialiased;
  }

  .logo {
    animation-duration: 800ms;
    animation-timing-function: ease-in;
  }
  .subtitleSection:last-child {
    height: 100vh;
  }

  @keyframes riseBg {
    0% {
      transform: translateY(150px);
    }
    100% {
      transform: translateY(-150px);
    }
  }

  #scrollIndicatorInvision .scrollIcon {
    border: 2px solid #447f88;
  }
  #scrollIndicatorInvision .scrollIcon::after {
    background: #447f88;
  }
  #scrollIndicatorInvision .down-arrow {
    background-color: #447f88;
    mask: url(/images/bottom-arrow.svg) no-repeat center;
  }
</style>
<script>
  const sections = document.querySelectorAll('.envision .section');

  const options: IntersectionObserverInit = {
    threshold: 0.8,
  };
  const observer = new IntersectionObserver((entries, _) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.remove('opacity-0');
        entry.target
          .querySelector('.subtitle')
          ?.classList.remove('animate-fadeOut-short', 'opacity-0');
        entry.target
          .querySelector('.subtitle')
          ?.classList.add('animate-riseIn-short', 'animation-delay-600');
      }
    });
  }, options);

  sections.forEach((section) => {
    observer.observe(section);
  });

  let countForScroll = 0;
  const onScroll = (event: WheelEvent) => {
    const winScroll =
      document.body.scrollTop || document.documentElement.scrollTop;

    if (winScroll > 0) {
      countForScroll = 0;
    } else {
      countForScroll = countForScroll + event.deltaY;
    }

    if (countForScroll < -1000) {
      window.location.href = '/#from-envision';
    }
  };

  document.addEventListener('wheel', onScroll);

  let startY = 0;
  let endY = 0;
  const onDragStart = (event: TouchEvent) => {
    startY = event.touches[0]?.clientY ?? 0;
  };

  const onDragMove = (event: TouchEvent) => {
    endY = event.touches[0]?.clientY ?? 0;
  };

  const onDragEnd = () => {
    const winScroll =
      document.body.scrollTop || document.documentElement.scrollTop;
    if (startY < endY && winScroll === 0) {
      window.location.href = '/#from-envision';
    }
  };

  document?.addEventListener('touchstart', onDragStart);
  document?.addEventListener('touchmove', onDragMove);
  document?.addEventListener('touchend', onDragEnd);
</script>
