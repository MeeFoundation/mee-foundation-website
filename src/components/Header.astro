---
import Logo from './Logo.astro';
import Menu from './Menu.astro';

export interface Props {
  logoColor?: 'blue' | 'white';
  backgroundColor?: 'bg-white' | 'bg-how-me-header-bg' | 'bg-transparent' | "backdrop-blur-md";
  withoutProgress?: boolean;
}

const {logoColor = 'white', backgroundColor = 'bg-transparent', withoutProgress = false} = Astro.props;
---

<header id="header" class:list={[
  'header fixed top-0 z-200 w-full h-[84px]',
  backgroundColor,
]}>
  <div class="flex justify-between px-5 pt-4 md:px-[60px] md:pt-6 ">
    <a
      href="/"
      id="mainLogo"
      class:list={[
        'block logo w-[69px] h-5 pt-1.5 md:w-[97px] md:h-[28px] md:pt-0',
        {'logo--contrast': logoColor === 'blue'},
      ]}
    >
      <Logo />
    </a>
    <Menu />
  </div>
  {!withoutProgress && <div class="progress-container fixed top-0">
    <div class="progress-bar" id="scroll-indicator"></div>
  </div>}
  
</header>

<style is:global>
  
</style>


<script>
  const toggleButton = document.querySelector("#menuToggle");
  const toggleButtonText = document.querySelector("#menuToggle span")
  const backdrop = document.querySelector("#backdrop");
  const nav = document.querySelector("#nav");
  let isMenuOpen = false

  const toggleNav = (e: Event) => {
    e.stopPropagation();
    isMenuOpen = toggleButtonText?.textContent === "Menu"
    const btnText = toggleButtonText?.textContent === "Menu" ? "Close" : "Menu";
    if(toggleButtonText) {
      toggleButtonText?.classList.add("opacity-0");
      toggleButtonText.textContent = btnText;
      setTimeout(()=>{
        requestAnimationFrame(()=>{
          toggleButtonText?.classList.remove("opacity-0");
          backdrop?.classList.toggle("max-h-0");
        })
      }, 200);
    }
    if (backdrop?.classList.contains("opacity-0")) {
      backdrop?.classList.remove("opacity-0");
      backdrop?.classList.add("opacity-70");
    } else {
      backdrop?.classList.remove("opacity-70");
      backdrop?.classList.add("opacity-0");
    }
    toggleButton?.classList.toggle("menu__item--active");
    nav?.classList.toggle("nav--active");
    nav?.classList.toggle("max-lg:overflow-y-hidden");
    nav?.classList.toggle("lg:w-0")
  }

  toggleButton?.addEventListener("click", toggleNav);

  document.addEventListener("click", (e) => {
    if (isMenuOpen) {
      toggleNav(e)
    }
  });

  const toggleLink = (button: any) => {
    const link = button && button.target ? button.target.querySelector("a"): null;
    const href = link && link.href ? link.href : null;
    if (href) {
      window.location.href = href;
    }
  }

  const buttons = document.querySelectorAll("li.menu__item");
  buttons.forEach(
    button => button.addEventListener("click", toggleLink)
  );
</script>