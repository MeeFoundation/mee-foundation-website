---
export interface Props {}

const {} = Astro.props;
let isOpen = false;
const links = [{name: "How MEE works", link:"#"},{name: "About Us", link:"#"},{name: "For Developers", link:"#"},{name: "For Providers", link:"#"}]
---

<section class="flex font-extrabold gap-5 flex-col lg:flex-row-reverse items-end">
  <button id="menuToggle" class="menu__item flex flex-row min-h-[34px] md:min-h-[28px] justify-center py-2.5 px-3.5 md:py-[7px] md:px-[13px] overflow-hidden z-10"><span class="">Menu</span></button>
  <ul id="nav" class="nav  flex flex-col items-end max-lg:h-0 lg:w-0 lg:h-auto lg:flex-row gap-5 max-lg:overflow-y-hidden lg:overflow-x-clip z-10">
    {links.map(link => (<li class="text menu__item min-h-[34px] md:min-h-[28px] py-2.5 px-3.5 md:py-[7px] md:px-[13px]"><a href={link.link} class="flex flex-row overflow-hidden">{link.name}</a></li>) )}
  </ul>
  <div id="backdrop" class="absolute h-screen max-h-0  z-0 top-0 left-0 opacity-0 bg-gray-dark w-full transition-all duration-500 ease-linear md:hidden"/>
</section>

<style is:global>
  .text {
		-webkit-font-smoothing: antialiased;
		font-smoothing: antialiased;  
		backface-visibility: hidden;
	}
  .nav {
    margin-block-start: 0;
    margin-block-end: 0;
    transition-property: width, height;
    transition-duration: 500ms;
    transition-timing-function: ease-in;
  }
  .nav--active {
    width: 100%;
    height: 100%;
    transition-timing-function: ease-out;
  }
  .menu__item {
    display: flex;
    font-size: 14px;
    flex-direction: row;
    align-items: center;
    padding-top: -4px;
    margin-top: 4px;
    line-height: 1;
    letter-spacing: 0.05em;
    text-transform: uppercase;
    border-radius: 40px;
    color: rgba(0, 0, 0, 0.8);
    background-color: #fff;
    box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.12);
    width: fit-content;
    min-width: 78px;
    text-align: center;
    transition: transform 0.44s ease, background-color 0.5s ease-in, opacity 0.1s ease 0.44s;
  }
  li.menu__item:hover {
    transform: translateY(-4px);
  }
  .menu__item--active {
    transition-timing-function: ease-out;
    background-color: #ffdf80;
    width: 78px;
  }
  .menu__item a {
    text-shadow: 0 14px 0 rgba(0, 0, 0, 0.8);
  }
  .menu__item span {
    display: block;
    backface-visibility: hidden;
    white-space: pre;
    transition: transform 0.44s ease, opacity 0.25s ease-in;
  }
  .menu__item--active span {
    transition: transform 0.44s ease, opacity 0.25s ease-out;
  }
  .nav .menu__item:hover span {
    transform: translateY(-14px);
  }
</style>

<script>
  const toggleButton = document.querySelector("#menuToggle");
  const toggleButtonText = document.querySelector("#menuToggle span")
  const backdrop = document.querySelector("#backdrop");
  const nav = document.querySelector("#nav");

  const toggleNav = () => {
    const btnText = toggleButtonText?.textContent === "Menu" ? "Close" : "Menu";
    if(toggleButtonText) {
      toggleButtonText?.classList.add("opacity-0");
      toggleButtonText.textContent = btnText;
      setTimeout(()=>{
        requestAnimationFrame(()=>{
          toggleButtonText?.classList.remove("opacity-0");
          backdrop?.classList.toggle("max-h-0");
        })
      }, 250);
    }
    backdrop?.classList.toggle("opacity-0");
    toggleButton?.classList.toggle("menu__item--active");
    nav?.classList.toggle("nav--active");
  }

  toggleButton?.addEventListener("click", toggleNav);

  // For letters wave animation
  const links = document.querySelectorAll("li.menu__item a");

  const splitTextToLetters = (text:string) => {
    const arr = text.trim().split("");
    return arr.map((letter,index) => `<span style="transition-delay:${50 + 50 * index}ms">${letter}</span>`).join("");
  }

  links.forEach(
    link => link.innerHTML = splitTextToLetters(link.textContent || "")
  );
</script>
